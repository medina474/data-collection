alter table cinema.film
  add column vote_votants integer,
  add column vote_moyenne decimal(4,2);

drop table if exists cinema.vote;

create table if not exists cinema.vote (
  id integer not null primary key generated by default as identity,
  film uuid not null,
  "user" uuid not null,
  note integer not null
);

alter table cinema.vote
  add constraint vote_film_fk FOREIGN KEY (film)
        REFERENCES cinema.film (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID;

alter table cinema.vote
  add CONSTRAINT note_check CHECK (note < 6) NOT VALID;

CREATE FUNCTION cinema.vote_calcul()
  RETURNS trigger
  LANGUAGE 'plpgsql'
AS $BODY$
declare
   moyenne integer;
   votants decimal(4,2);
BEGIN
  SELECT count(*), avg(note) INTO votants, moyenne FROM cinema.vote WHERE film = NEW.film;
  UPDATE cinema.film SET vote_votants=COALESCE(votants,0), vote_moyenne=COALESCE(moyenne,0) WHERE id = NEW.film;
  RETURN NEW;
END
$BODY$;

create trigger trigger_route_insert
  after insert
  on cinema.vote
  for each row
  execute function cinema.vote_calcul();

create trigger trigger_route_update
  after update
  on cinema.vote
  for each row
  execute function cinema.vote_calcul();

alter function cinema.vote_calcul()
  owner to iutsd;
