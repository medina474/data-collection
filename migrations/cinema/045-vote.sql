alter table cinema.films
  add column vote_votants integer,
  add column vote_moyenne decimal(4,2);

create table if not exists cinema.votes (
  vote_id integer not null primary key generated by default as identity,
  film_id integer not null,
  "user" uuid not null,
  note integer not null
);

alter table cinema.votes
  add foreign key (film_id)
        references cinema.films (film_id) match simple
        on update no action
        on delete no action
        not valid;

create index vote_film_fki
  on cinema.votes(film_id);

alter table cinema.votes
  add constraint note_check check (note >= 0 and note < 6) not valid;

CREATE FUNCTION cinema.vote_calcul()
  RETURNS trigger
  LANGUAGE 'plpgsql'
AS $BODY$
declare
   moyenne decimal(4,2);
   votants integer;
BEGIN
  SELECT count(*), avg(note) INTO votants, moyenne FROM cinema.votes WHERE film_id = NEW.film_id;
  UPDATE cinema.films SET vote_votants=COALESCE(votants,0), vote_moyenne=COALESCE(moyenne,0) WHERE film_id = NEW.film_id;
  RETURN NEW;
END
$BODY$;

create trigger trigger_vote_insert
  after insert
  on cinema.votes
  for each row
  execute function cinema.vote_calcul();

create trigger trigger_vote_update
  after update
  on cinema.votes
  for each row
  execute function cinema.vote_calcul();

alter function cinema.vote_calcul()
  owner to iutsd;
